def ! {half-adder} ! (
	(
		unit
		unit
	)
	(
		unit
		unit
	)
) (sandwich ! (~ ! prod) < ! (
	0: 0: :0 :0
	1: 0: <| (
		:1 :0
		:0 :1
	) >
	0: 1: :1 :1
))

## (def ! {half-adder-from-the-future}) ! <| (
	(
		0:
		0:
	) ||> <|| (
		:0
		:0
	)
	(
		1:
		0:
	) ||> <| (
		<|| (
			:0
			:1
		)
		<|| (
			:1
			:0
		)
	) |>
	(
		0:
		1:
	) ||> <|| (
		:1
		:1
	)
) |>

def ! {full-adder} ! <| (
	(
		0:
		0:
	) ||> :0 :0 :0
	(
		1:
		0:
	) ||> <| (
		:1 :0 :0
		:0 :1 :0
		:0 :0 :1
	) >
	(
		0:
		1:
	) ||> <| (
		:1 :1 :0
		:1 :0 :1
		:0 :1 :1
	) >
	(
		1:
		1:
	) ||> :1 :1 :1
) > prod

< (
	map ! :out
	sandwich ! 8: ! :2
) > < (
	< (
		7: out:
		8: 2:
	) full-adder :7
	I
) > < (
	< (
		6: out:
		7: 2:
	) full-adder :6
	I
) > < (
	< (
		5: out:
		6: 2:
	) full-adder :5
	I
) > < (
	< (
		4: out:
		5: 2:
	) full-adder :4
	I
) > < (
	< (
		3: out:
		4: 2:
	) full-adder :3
	I
) > < (
	< (
		2: out:
		3: 2:
	) full-adder :2
	I
) > < (
	< (
		1: out:
		2: 2:
	) full-adder :1
	I
) > < (
	< (
		0: out:
		1: 2:
	) half-adder :0
	I
) > < (
	map ! 0:
	map ! 1:
)
