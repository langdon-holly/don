(fn 'parse-prog-expr
  " (fn 'Z
      " (fn 'error
          " (fn 'this-env
              " (fn 'new-env
                  " (fn 'var-key
                      " ( (= var-key 'parse-prog-expr true
                              (= var-key 'Z true (= var-key 'error )))
                          this-env
                          new-env
                          var-key )))
              env )
          (call/onerr make-cont (fn 'err "(continue (err 2 )(err 0 )))))
      (fn 'f
        " (fn 'x
            "(f (fn 'v "(x x v )))
            (fn 'x
              "(f (fn 'v "(x x v )))))))
  (fn 'str
    " (fn 'parsed
        " (okp parsed
            " (ok
                (fn 'new-env
                  " ("expr (unok parsed )
                      (fn 'var-key
                        " (= var-key 'source-data
                            "(q ("rest (unok parsed )))
                            "(new-env var-key )
                            env )))))
            "(err (unerr parsed 'file ))
            env )
        (parse-prog str ))))

\)

(fn "x
  " \ Z
      (fn "*x
        "(fn "y
           "(eval
              (= y 0
                "0
                "\ +
                   [ x
                     \*x\-[y 1 ]])
              env ))))
